{"version":3,"sources":["book/merge_component.cljs"],"mappings":"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","names":["options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__87247","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__87248","com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1","js/book","js/book.merge-component","js/book.merge-component.Counter","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj87252","G__87253","G__87254","goog.object/get","obj87256","com.fulcrologic.fulcro.components/configure-component!","book.merge-component/Counter","id","n","onClick","computed","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","book.merge-component/ui-counter","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","book.merge-component/increment-counter*","database","counter-id","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core/inc","book.merge-component/increment-counter","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__87257","p__87259","map__87260","env","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","params","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","p__87264","map__87265","map__87267","js/book.merge-component.CounterPanel","obj87271","G__87272","G__87273","obj87275","book.merge-component/CounterPanel","counters","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","click-callback","cljs.core/vec","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/List","cljs.core/array-map","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.dom/macro-create-element*","p1__87263#","cljs.core.map.cljs$core$IFn$_invoke$arity$2","G__87269","com.fulcrologic.fulcro.components/computed","book.merge-component/ui-counter-panel","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","js/book.merge-component.timer-id","book.merge-component/timer-id","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","book.merge-component/add-counter","app","counter","com.fulcrologic.fulcro.algorithms.merge.merge_component_BANG_.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.components/make-state-map","map__87277","js/book.merge-component.Root","obj87281","G__87282","G__87283","obj87285","book.merge-component/Root","panel","com.fulcrologic.fulcro.components/any->app"],"sourcesContent":["(ns book.merge-component\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.mutations :as m :refer [defmutation]]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]))\n\n(defsc Counter [this {:keys [counter/id counter/n] :as props} {:keys [onClick] :as computed}]\n  {:query [:counter/id :counter/n]\n   :ident [:counter/by-id :counter/id]}\n  (dom/div :.counter\n    (dom/span :.counter-label\n      (str \"Current count for counter \" id \":  \"))\n    (dom/span :.counter-value n)\n    (dom/button {:onClick #(onClick id)} \"Increment\")))\n\n(def ui-counter (comp/factory Counter {:keyfn :counter/id}))\n\n; the * suffix is just a notation to indicate an implementation of something..in this case the guts of a mutation\n(defn increment-counter*\n  \"Increment a counter with ID counter-id in a Fulcro database.\"\n  [database counter-id]\n  (update-in database [:counter/by-id counter-id :counter/n] inc))\n\n(defmutation increment-counter [{:keys [id] :as params}]\n  ; The local thing to do\n  (action [{:keys [state] :as env}]\n    (swap! state increment-counter* id))\n  ; The remote thing to do. True means \"the same (abstract) thing\". False (or omitting it) means \"nothing\"\n  (remote [env] true))\n\n(defsc CounterPanel [this {:keys [counters]}]\n  {:initial-state (fn [params] {:counters []})\n   :query         [{:counters (comp/get-query Counter)}]\n   :ident         (fn [] [:panels/by-kw :counter])}\n  (let [click-callback (fn [id] (comp/transact! this\n                                  `[(increment-counter {:id ~id}) :counter/by-id]))]\n    (dom/div\n      ; embedded style: kind of silly in a real app, but doable\n      (dom/style \".counter { width: 400px; padding-bottom: 20px; }\n                  button { margin-left: 10px; }\")\n      ; computed lets us pass calculated data to our component's 3rd argument. It has to be\n      ; combined into a single argument or the factory would not be React-compatible (not would it be able to handle\n      ; children).\n      (map #(ui-counter (comp/computed % {:onClick click-callback})) counters))))\n\n(def ui-counter-panel (comp/factory CounterPanel))\n\n(defonce timer-id (atom 0))\n(declare sample-of-counter-app-with-merge-component-fulcro-app)\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; The code of interest...\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n(defn add-counter\n  \"NOTE: A function callable from anywhere as long as you have a reconciler...\"\n  [app counter]\n  (merge/merge-component! app Counter counter\n    :append [:panels/by-kw :counter :counters]))\n\n(defsc Root [this {:keys [panel]}]\n  {:query         [{:panel (comp/get-query CounterPanel)}]\n   :initial-state {:panel {}}}\n  (dom/div {:style {:border \"1px solid black\"}}\n    ; NOTE: A plain function...pretend this is happening outside of the UI...we're doing it here so we can embed it in the book...\n    (dom/button {:onClick #(add-counter (comp/any->app this) {:counter/id 4 :counter/n 22})} \"Simulate Data Import\")\n    (dom/hr)\n    \"Counters:\"\n    (ui-counter-panel panel)))\n"]}