{"version":3,"sources":["book/demos/pre_merge/countdown.cljs"],"mappings":"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","names":["book.demos.pre-merge.countdown/all-counters","com.wsscode.pathom.connect/resolver","p__89620","map__89621","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","book.demos.pre-merge.countdown/counter-resolver","env","counter-id","map__89623","id","cljs.core/first","p1__89619#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","book.demos.pre-merge.countdown/resolvers","options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__89628","com.fulcrologic.fulcro.components/props","js/book","js/book.demos","js/book.demos.pre-merge","js/book.demos.pre-merge.countdown","js/book.demos.pre-merge.countdown.Countdown","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj89631","G__89632","G__89633","goog.object/get","obj89635","com.fulcrologic.fulcro.components/configure-component!","book.demos.pre-merge.countdown/Countdown","counter-label","count","p__89625","map__89626","current-normalized","data-tree","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","done?","com.fulcrologic.fulcro.mutations/set-value!","book.demos.pre-merge.countdown/ui-countdown","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__89636","js/book.demos.pre-merge.countdown.Root","obj89651","G__89652","G__89653","obj89657","book.demos.pre-merge.countdown/Root","counter","_","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core/seq","com.fulcrologic.fulcro.data_fetch.load_BANG_.cljs$core$IFn$_invoke$arity$4","book.demos.pre-merge.countdown/initialize","app"],"sourcesContent":["(ns book.demos.pre-merge.countdown\n  (:require\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [book.demos.util :refer [now]]\n    [com.fulcrologic.fulcro.mutations :as m]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.wsscode.pathom.connect :as pc]))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; SERVER:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def all-counters\n  [{::counter-id 1 ::counter-label \"A\"}])\n\n(pc/defresolver counter-resolver [env {::keys [counter-id]}]\n  {::pc/input  #{::counter-id}\n   ::pc/output [::counter-id ::counter-label]}\n  (let [{:keys [id]} (-> env :ast :params)]\n    (first (filter #(= id (::counter-id %)) all-counters))))\n\n(def resolvers [counter-resolver])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; CLIENT:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(defsc Countdown [this {::keys   [counter-label]\n                        :ui/keys [count]}]\n  {:ident     [::counter-id ::counter-id]\n   :query     [::counter-id ::counter-label :ui/count]\n   :pre-merge (fn [{:keys [current-normalized data-tree]}]\n                (merge\n                  {:ui/count 5}\n                  current-normalized\n                  data-tree))}\n  (dom/div\n    (dom/h4 counter-label)\n    (let [done? (zero? count)]\n      (dom/button {:disabled done?\n                   :onClick  #(m/set-value! this :ui/count (dec count))}\n        (if done? \"Done!\" (str count))))))\n\n(def ui-countdown (comp/factory Countdown {:keyfn ::counter-id}))\n\n(defsc Root [this {:keys [counter]}]\n  {:initial-state (fn [_] {})\n   :query         [{:counter (comp/get-query Countdown)}]}\n  (dom/div\n    (dom/h3 \"Counters\")\n    (if (seq counter)\n      (ui-countdown counter)\n      (dom/button {:onClick #(df/load! this [::counter-id 1] Countdown {:target [:counter]})}\n        \"Load one counter\"))))\n\n(defn initialize\n  \"To be used in :started-callback to pre-load things.\"\n  [app])\n"]}