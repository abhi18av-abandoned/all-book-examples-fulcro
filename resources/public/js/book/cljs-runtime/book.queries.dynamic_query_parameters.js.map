{"version":3,"sources":["book/queries/dynamic_query_parameters.cljs"],"mappings":"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","names":["options__72617__auto__","p__85706","map__85707","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.components/wrapped-render","map__85715","com.fulcrologic.fulcro.components/props","js/book","js/book.queries","js/book.queries.dynamic-query-parameters","js/book.queries.dynamic-query-parameters.Leaf","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj85763","G__85764","G__85765","goog.object/get","obj85767","com.fulcrologic.fulcro.components/configure-component!","book.queries.dynamic-query-parameters/Leaf","this","x","y","props","params","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.components/set-query!","com.fulcrologic.fulcro.dom/macro-create-element*","book.queries.dynamic-query-parameters/ui-leaf","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","map__85771","js/book.queries.dynamic-query-parameters.Root","obj85776","G__85777","G__85778","obj85780","book.queries.dynamic-query-parameters/Root","leaf","p","com.fulcrologic.fulcro.components.get_initial_state.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns book.queries.dynamic-query-parameters\n  (:require\n    [com.fulcrologic.fulcro.dom :as dom]\n    [goog.object]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]))\n\n; This component has a query parameter that can be set to whatever we want dynamically\n(defsc Leaf [this {:keys [x y] :as props}]\n  {:initial-state (fn [params] {:x 1 :y 99})\n   :query         (fn [] '[:x ?additional-stuff])           ; the parameter ?additional-stuff starts out empty\n   :ident         (fn [] [:LEAF :ID])}\n  (dom/div\n    (dom/button  {:onClick (fn [] (comp/set-query! this Leaf {:params {:additional-stuff :y}}))} \"Add :y to query\")\n    (dom/button  {:onClick (fn [] (comp/set-query! this Leaf {:params {}}))} \"Drop :y from query\")\n    (dom/ul\n      (dom/li  \"x: \" x)\n      (dom/li  \"y: \" y))))\n\n(def ui-leaf (comp/factory Leaf))\n\n(defsc Root [this {:keys [root/leaf] :as props}]\n  {:initial-state (fn [p] {:root/leaf (comp/get-initial-state Leaf {})})\n   :query         (fn [] [{:root/leaf (comp/get-query ui-leaf)}])}\n  (dom/div  (ui-leaf leaf)))\n"]}