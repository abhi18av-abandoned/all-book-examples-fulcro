{"version":3,"sources":["book/server/network_activity.cljs"],"mappings":"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","names":["com.wsscode.pathom.connect/resolver","book.server.network-activity/silly-resolver","_","options__72617__auto__","params","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","com.fulcrologic.fulcro.components/props","js/book","js/book.server","js/book.server.network-activity","js/book.server.network-activity.ActivityIndicator","props__72618__auto__","this__72619__auto__","temp__5733__auto__","cljs.core.get.cljs$core$IFn$_invoke$arity$2","init-state__72620__auto__","obj88650","G__88651","G__88652","goog.object/get","obj88654","com.fulcrologic.fulcro.components/configure-component!","book.server.network-activity/ActivityIndicator","this","props","active-remotes","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","book.server.network-activity/ui-activity-indicator","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__88662","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","js/book.server.network-activity.Root","obj88681","G__88682","G__88683","obj88685","book.server.network-activity/Root","indicator","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.data_fetch.load_BANG_.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns book.server.network-activity\n  (:require\n    [com.fulcrologic.fulcro.application :as app]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.mutations :as m :refer [defmutation]]\n    [com.wsscode.pathom.connect :as pc]\n    [taoensso.timbre :as log]\n    [clojure.pprint :refer [pprint]]\n    [com.fulcrologic.fulcro.data-fetch :as df]))\n\n;; Simulated server\n\n(pc/defresolver silly-resolver [_ _]\n  {::pc/output [::data]}\n  {::data 42})\n\n;; Client\n\n(defsc ActivityIndicator [this props]\n  {:query         [[::app/active-remotes '_]]\n   :ident         (fn [] [:component/id ::activity])\n   :initial-state {}}\n  (let [active-remotes (::app/active-remotes props)]\n    (dom/div\n      (dom/h3 \"Active Remotes\")\n      (dom/pre (pr-str active-remotes)))))\n\n(def ui-activity-indicator (comp/factory ActivityIndicator {:keyfn :id}))\n\n(defsc Root [this {:keys [indicator]}]\n  {:query         [{:indicator (comp/get-query ActivityIndicator)}]\n   :initial-state {:indicator {}}}\n  (dom/div {}\n    (dom/p {} \"Use the server controls to slow down the network, so you can see the activity\")\n    (dom/button {:onClick #(df/load! this ::data nil)} \"Trigger a Load\")\n    (ui-activity-indicator indicator)))\n\n"]}