{"version":3,"sources":["book/demos/pre_merge/countdown_initial_state.cljs"],"mappings":"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","names":["book.demos.pre-merge.countdown-initial-state/all-counters","com.wsscode.pathom.connect/resolver","book.demos.pre-merge.countdown-initial-state/counter-resolver","env","_","book.demos.pre-merge.countdown-initial-state/resolvers","book.demos.pre-merge.countdown-initial-state/default-count","options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__89709","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/book","js/book.demos","js/book.demos.pre-merge","js/book.demos.pre-merge.countdown-initial-state","js/book.demos.pre-merge.countdown-initial-state.CountdownButton","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj89712","G__89713","G__89714","goog.object/get","obj89716","com.fulcrologic.fulcro.components/configure-component!","book.demos.pre-merge.countdown-initial-state/CountdownButton","count","p__89706","map__89707","current-normalized","data-tree","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","cljs.core/random-uuid","done?","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.mutations/set-value!","book.demos.pre-merge.countdown-initial-state/ui-countdown-button","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__89726","js/book.demos.pre-merge.countdown-initial-state.Countdown","obj89729","G__89730","G__89731","obj89733","book.demos.pre-merge.countdown-initial-state/Countdown","counter-label","counter-initial","counter","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","p__89717","map__89718","initial","com.fulcrologic.fulcro.algorithms.merge/nilify-not-found","result__50341__auto__","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","e89724","js/Error","e__50288__auto__","G__89725","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","or__4131__auto__","book.demos.pre-merge.countdown-initial-state/ui-countdown","map__89735","js/book.demos.pre-merge.countdown-initial-state.Root","obj89744","G__89745","G__89746","obj89748","book.demos.pre-merge.countdown-initial-state/Root","all-counters","com.fulcrologic.fulcro.algorithms.tempid.tempid.cljs$core$IFn$_invoke$arity$0","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core/seq","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2"],"sourcesContent":["(ns book.demos.pre-merge.countdown-initial-state\n  (:require\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [book.demos.util :refer [now]]\n    [com.fulcrologic.fulcro.mutations :as m]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.wsscode.pathom.connect :as pc]\n    [com.fulcrologic.fulcro.algorithms.merge :as merge]\n    [com.fulcrologic.fulcro.algorithms.tempid :as tempid]\n    [taoensso.timbre :as log]))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; SERVER:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def all-counters\n  [{::counter-id 1 ::counter-label \"A\"}\n   {::counter-id 2 ::counter-label \"B\" ::counter-initial 10}\n   {::counter-id 3 ::counter-label \"C\" ::counter-initial 2}\n   {::counter-id 4 ::counter-label \"D\"}])\n\n(pc/defresolver counter-resolver [env _]\n  {::pc/output [{::all-counters [::counter-id ::counter-label]}]}\n  {::all-counters all-counters})\n\n(def resolvers [counter-resolver])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; CLIENT:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def default-count 5)\n\n(defsc CountdownButton [this {:ui/keys [count]}]\n  {:ident     [:ui/id :ui/id]\n   :query     [:ui/id :ui/count]\n   :pre-merge (fn [{:keys [current-normalized data-tree]}]\n                (merge\n                  {:ui/id    (random-uuid)\n                   :ui/count default-count}\n                  current-normalized\n                  data-tree))}\n  (let [done? (zero? count)]\n    (dom/button {:disabled done?\n                 :onClick  #(m/set-value! this :ui/count (dec count))}\n      (if done? \"Done!\" (str count)))))\n\n(def ui-countdown-button (comp/factory CountdownButton {:keyfn ::counter-id}))\n\n(defsc Countdown [this {::keys   [counter-label counter-initial]\n                        :ui/keys [counter]}]\n  {:ident     [::counter-id ::counter-id]\n   :query     [::counter-id ::counter-label ::counter-initial\n               {:ui/counter (comp/get-query CountdownButton)}]\n   :pre-merge (fn [{:keys [current-normalized data-tree]}]\n                (let [initial (merge/nilify-not-found (::counter-initial data-tree))]\n                  (log/spy :info (merge\n                                   {:ui/counter (cond-> {} initial (assoc :ui/count initial))}\n                                   current-normalized\n                                   data-tree))))}\n  (dom/div\n    (dom/h4 (str counter-label \" [\" (or counter-initial default-count) \"]\"))\n    (ui-countdown-button counter)))\n\n(def ui-countdown (comp/factory Countdown {:keyfn ::counter-id}))\n\n(defsc Root [this {::keys [all-counters]}]\n  {:initial-state (fn [_] {::all-counters\n                           [{::counter-id    (tempid/tempid)\n                             ::counter-label \"X\"}\n                            {::counter-id    (tempid/tempid)\n                             ::counter-label \"Y\"}\n                            {::counter-id      (tempid/tempid)\n                             ::counter-label   \"Z\"\n                             ::counter-initial 9}]})\n   :query         [{::all-counters (comp/get-query Countdown)}]}\n  (dom/div\n    (dom/h3 \"Counters\")\n    (when (seq all-counters)\n      (dom/div {:style {:display \"flex\" :alignItems \"center\" :justifyContent \"space-between\"}}\n        (mapv ui-countdown all-counters)))))\n"]}