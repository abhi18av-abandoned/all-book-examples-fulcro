{
"version":3,
"file":"module$node_modules$react_stripe_elements$lib$utils$isEqual.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,4DAAA,CAAgF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAIA,KAAIC,QAA4B,UAAlB,GAAA,MAAOC,OAAP,EAA2D,QAA3D,GAAgC,MAAOA,OAAAC,SAAvC,CAAsE,QAAS,CAACC,GAAD,CAAM,CAAE,MAAO,OAAOA,IAAhB,CAArF,CAA8G,QAAS,CAACA,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAyB,UAAzB,GAAO,MAAOF,OAAd,EAAuCE,GAAAC,YAAvC,GAA2DH,MAA3D,EAAqEE,GAArE,GAA6EF,MAAAI,UAA7E,CAAgG,QAAhG,CAA2G,MAAOF,IAA3H,CAiD3IP,QAAAU,QAAA,CA7CcC,QAASA,QAAO,CAACC,IAAD,CAAOC,KAAP,CAAc,CAK1C,GAJoE,QAIpE,IAJqB,WAAhB,GAAA,MAAOD,KAAP,CAA8B,WAA9B,CAA4CR,OAAA,CAAQQ,IAAR,CAIjD;AAJkJ,QAIlJ,IAJkG,WAAjB,GAAA,MAAOC,MAAP,CAA+B,WAA/B,CAA6CT,OAAA,CAAQS,KAAR,CAI9H,GAAa,IAAb,GAAID,IAAJ,EAA+B,IAA/B,GAAqBC,KAArB,CAAqC,MAAOD,KAAP,GAAgBC,KAErD,KAAIC,UAAYC,KAAAC,QAAA,CAAcJ,IAAd,CAAhB,CACIK,WAAaF,KAAAC,QAAA,CAAcH,KAAd,CAEjB,IAAIC,SAAJ,GAAkBG,UAAlB,CAA8B,MAAO,CAAA,CAEjCC,WAAAA,CAdiBC,iBAcjBD,GAAkBjB,MAAAQ,UAAAW,SAAAC,KAAA,CAA+BT,IAA/B,CACtB,KAAIU,iBAfiBH,iBAejBG,GAAmBrB,MAAAQ,UAAAW,SAAAC,KAAA,CAA+BR,KAA/B,CAIvB,IAFIK,UAEJ,GAFwBI,gBAExB,EAAI,CAACJ,UAAL,EAAwB,CAACJ,SAAzB,CAAoC,MAAO,CAAA,CAEvCS,UAAAA,CAAWtB,MAAAuB,KAAA,CAAYZ,IAAZ,CACXa,WAAAA,CAAYxB,MAAAuB,KAAA,CAAYX,KAAZ,CAEhB,IAAIU,SAAAG,OAAJ;AAAwBD,UAAAC,OAAxB,CAA0C,MAAO,CAAA,CAE7CC,iBAAAA,CAAS,EACb,KAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBL,SAAAG,OAApB,CAAqCE,CAArC,EAA0C,CAA1C,CACED,gBAAA,CAAOJ,SAAA,CAASK,CAAT,CAAP,CAAA,CAAsB,CAAA,CAExB,KAASC,CAAT,CAAc,CAAd,CAAiBA,CAAjB,CAAsBJ,UAAAC,OAAtB,CAAwCG,CAAxC,EAA8C,CAA9C,CACEF,gBAAA,CAAOF,UAAA,CAAUI,CAAV,CAAP,CAAA,CAAwB,CAAA,CAEtBC,WAAAA,CAAU7B,MAAAuB,KAAA,CAAYG,gBAAZ,CACd,OAAIG,WAAAJ,OAAJ,GAAuBH,SAAAG,OAAvB,CACS,CAAA,CADT,CAUOI,UAAAC,MAAA,CAJIC,QAAa,CAACC,GAAD,CAAM,CAC5B,MAAOtB,QAAA,CAHDC,IAGS,CAAEqB,GAAF,CAAR,CAFDpB,KAEiB,CAAEoB,GAAF,CAAhB,CADqB,CAIvB,CA1CmC,CAX4E;",
"sources":["node_modules/react-stripe-elements/lib/utils/isEqual.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_stripe_elements$lib$utils$isEqual\"] = function(global,require,module,exports) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar PLAIN_OBJECT_STR = '[object Object]';\n\nvar isEqual = function isEqual(left, right) {\n  if ((typeof left === 'undefined' ? 'undefined' : _typeof(left)) !== 'object' || (typeof right === 'undefined' ? 'undefined' : _typeof(right)) !== 'object') {\n    return left === right;\n  }\n\n  if (left === null || right === null) return left === right;\n\n  var leftArray = Array.isArray(left);\n  var rightArray = Array.isArray(right);\n\n  if (leftArray !== rightArray) return false;\n\n  var leftPlainObject = Object.prototype.toString.call(left) === PLAIN_OBJECT_STR;\n  var rightPlainObject = Object.prototype.toString.call(right) === PLAIN_OBJECT_STR;\n\n  if (leftPlainObject !== rightPlainObject) return false;\n\n  if (!leftPlainObject && !leftArray) return false;\n\n  var leftKeys = Object.keys(left);\n  var rightKeys = Object.keys(right);\n\n  if (leftKeys.length !== rightKeys.length) return false;\n\n  var keySet = {};\n  for (var i = 0; i < leftKeys.length; i += 1) {\n    keySet[leftKeys[i]] = true;\n  }\n  for (var _i = 0; _i < rightKeys.length; _i += 1) {\n    keySet[rightKeys[_i]] = true;\n  }\n  var allKeys = Object.keys(keySet);\n  if (allKeys.length !== leftKeys.length) {\n    return false;\n  }\n\n  var l = left;\n  var r = right;\n  var pred = function pred(key) {\n    return isEqual(l[key], r[key]);\n  };\n\n  return allKeys.every(pred);\n};\n\nexports.default = isEqual;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","default","isEqual","left","right","leftArray","Array","isArray","rightArray","leftPlainObject","PLAIN_OBJECT_STR","toString","call","rightPlainObject","leftKeys","keys","rightKeys","length","keySet","i","_i","allKeys","every","pred","key"]
}
