shadow$provide.module$node_modules$victory_brush_container$lib$brush_helpers=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"===typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,
sym).enumerable})));ownKeys.forEach(function(key){var value=source[key];key in target?Object.defineProperty(target,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):target[key]=value})}return target}function _toConsumableArray(arr){if(Array.isArray(arr)){var JSCompiler_temp=0;for(var arr2=Array(arr.length);JSCompiler_temp<arr.length;JSCompiler_temp++)arr2[JSCompiler_temp]=arr[JSCompiler_temp];JSCompiler_temp=arr2}else JSCompiler_temp=void 0;JSCompiler_temp||(JSCompiler_temp=Symbol.iterator in
Object(arr)||"[object Arguments]"===Object.prototype.toString.call(arr)?Array.from(arr):void 0);if(!(arr=JSCompiler_temp))throw new TypeError("Invalid attempt to spread non-iterable instance");return arr}Object.defineProperty(exports,"__esModule",{value:!0});exports.default=void 0;var _mapValues5=_interopRequireDefault(require("module$node_modules$lodash$mapValues")),_defaults2=_interopRequireDefault(require("module$node_modules$lodash$defaults")),_isFunction2=_interopRequireDefault(require("module$node_modules$lodash$isFunction"));
global=_interopRequireDefault(require("module$node_modules$lodash$throttle"));var _assign2=_interopRequireDefault(require("module$node_modules$lodash$assign")),_victoryCore=require("module$node_modules$victory_core$lib$index"),_reactFastCompare=_interopRequireDefault(require("module$node_modules$react_fast_compare$index"));require={withinBounds:function(point,bounds,padding){var _mapValues2=(0,_mapValues5.default)(bounds,Number);bounds=_mapValues2.x1;var x2=_mapValues2.x2,y1=_mapValues2.y1;_mapValues2=
_mapValues2.y2;var _mapValues3=(0,_mapValues5.default)(point,Number);point=_mapValues3.x;_mapValues3=_mapValues3.y;padding=padding?padding/2:0;return point+padding>=Math.min(bounds,x2)&&point-padding<=Math.max(bounds,x2)&&_mapValues3+padding>=Math.min(y1,_mapValues2)&&_mapValues3-padding<=Math.max(y1,_mapValues2)},getDomainBox:function(props,fullDomain,selectedDomain){var brushDimension=props.brushDimension;fullDomain=(0,_defaults2.default)({},fullDomain,props.domain);selectedDomain=(0,_defaults2.default)({},
selectedDomain,fullDomain);fullDomain=_victoryCore.Selection.getDomainCoordinates(props,fullDomain);props=_victoryCore.Selection.getDomainCoordinates(props,selectedDomain);return{x1:"y"!==brushDimension?Math.min.apply(Math,_toConsumableArray(props.x)):Math.min.apply(Math,_toConsumableArray(fullDomain.x)),x2:"y"!==brushDimension?Math.max.apply(Math,_toConsumableArray(props.x)):Math.max.apply(Math,_toConsumableArray(fullDomain.x)),y1:"x"!==brushDimension?Math.min.apply(Math,_toConsumableArray(props.y)):
Math.min.apply(Math,_toConsumableArray(fullDomain.y)),y2:"x"!==brushDimension?Math.max.apply(Math,_toConsumableArray(props.y)):Math.max.apply(Math,_toConsumableArray(fullDomain.y))}},getHandles:function(props,domainBox){var x1=domainBox.x1,x2=domainBox.x2,y1=domainBox.y1;domainBox=domainBox.y2;var minX=Math.min(x1,x2),maxX=Math.max(x1,x2),minY=Math.min(y1,domainBox),maxY=Math.max(y1,domainBox);props=props.handleWidth/2;return{left:{x1:minX-props,x2:minX+props,y1:y1,y2:domainBox},right:{x1:maxX-props,
x2:maxX+props,y1:y1,y2:domainBox},top:{x1:x1,x2:x2,y1:minY+props,y2:minY-props},bottom:{x1:x1,x2:x2,y1:maxY+props,y2:maxY-props}}},getActiveHandles:function(point,props,domainBox){var _this=this,handles=this.getHandles(props,domainBox);props=["top","bottom","left","right"].reduce(function(memo,opt){return memo=_this.withinBounds(point,handles[opt])?memo.concat(opt):memo},[]);return props.length&&props},getResizeMutation:function(box,handles){var x1=box.x1,y1=box.y1,x2=box.x2;box=box.y2;var mutations=
{left:{x1:Math.max(x1,x2),x2:Math.min(x1,x2),y1:y1,y2:box},right:{x1:Math.min(x1,x2),x2:Math.max(x1,x2),y1:y1,y2:box},top:{y1:Math.max(y1,box),y2:Math.min(y1,box),x1:x1,x2:x2},bottom:{y1:Math.min(y1,box),y2:Math.max(y1,box),x1:x1,x2:x2}};return handles.reduce(function(memo,current){return(0,_assign2.default)(memo,mutations[current])},{})},getMinimumDomain:function(){return{x:[0,1/Number.MAX_SAFE_INTEGER],y:[0,1/Number.MAX_SAFE_INTEGER]}},getDefaultBrushArea:function(defaultBrushArea,domain,cachedDomain){return"none"===
defaultBrushArea?this.getMinimumDomain():"disable"===defaultBrushArea?cachedDomain:domain},getSelectionMutation:function(point,box,brushDimension){var x=point.x;point=point.y;var x1=box.x1,x2=box.x2,y1=box.y1;box=box.y2;return{x1:"y"!==brushDimension?x:x1,y1:"x"!==brushDimension?point:y1,x2:"y"!==brushDimension?x:x2,y2:"x"!==brushDimension?point:box}},panBox:function(props,point){var brushDimension=props.brushDimension,domain=props.domain,startX=props.startX,startY=props.startY,brushDomain=(0,_defaults2.default)({},
props.brushDomain,domain);domain=(0,_defaults2.default)({},props.fullDomain,domain);var _ref=props.x1?props:this.getDomainBox(props,domain,brushDomain);props=_ref.x1;brushDomain=_ref.x2;domain=_ref.y1;_ref=_ref.y2;var x=point.x;point=point.y;startX=startX?startX-x:0;startY=startY?startY-point:0;return{x1:"y"!==brushDimension?Math.min(props,brushDomain)-startX:Math.min(props,brushDomain),x2:"y"!==brushDimension?Math.max(props,brushDomain)-startX:Math.max(props,brushDomain),y1:"x"!==brushDimension?
Math.min(domain,_ref)-startY:Math.min(domain,_ref),y2:"x"!==brushDimension?Math.max(domain,_ref)-startY:Math.max(domain,_ref)}},constrainBox:function(box,fullDomainBox){var _mapValues4=(0,_mapValues5.default)(fullDomainBox,Number);fullDomainBox=_mapValues4.x1;var y1=_mapValues4.y1,x2=_mapValues4.x2;_mapValues4=_mapValues4.y2;return{x1:box.x2>x2?x2-Math.abs(box.x2-box.x1):Math.max(box.x1,fullDomainBox),y1:box.y2>_mapValues4?_mapValues4-Math.abs(box.y2-box.y1):Math.max(box.y1,y1),x2:box.x1<fullDomainBox?
fullDomainBox+Math.abs(box.x2-box.x1):Math.min(box.x2,x2),y2:box.y1<y1?y1+Math.abs(box.y2-box.y1):Math.min(box.y2,_mapValues4)}},onMouseDown:function(evt,targetProps){var _this2=this;evt.preventDefault();var brushDimension=targetProps.brushDimension,handleWidth=targetProps.handleWidth,cachedBrushDomain=targetProps.cachedBrushDomain,domain=targetProps.domain,allowResize=targetProps.allowResize,allowDrag=targetProps.allowDrag,allowDraw=targetProps.allowDraw;if(!allowResize&&!allowDrag)return{};var fullDomainBox=
targetProps.fullDomainBox||this.getDomainBox(targetProps,domain),parentSVG=targetProps.parentSVG||_victoryCore.Selection.getParentSVG(evt);evt=_victoryCore.Selection.getSVGEventCoordinates(evt,parentSVG);var x=evt.x,y=evt.y;if(!this.withinBounds({x:x,y:y},fullDomainBox,handleWidth))return{};var brushDomain=(0,_defaults2.default)({},targetProps.brushDomain,domain),currentDomain=(0,_reactFastCompare.default)(brushDomain,cachedBrushDomain)?targetProps.currentDomain||brushDomain||domain:brushDomain||
domain,domainBox=this.getDomainBox(targetProps,domain,currentDomain),activeHandles=allowResize&&this.getActiveHandles({x:x,y:y},targetProps,domainBox);return activeHandles?[{target:"parent",mutation:function(){return _objectSpread({isSelecting:!0,domainBox:domainBox,fullDomainBox:fullDomainBox,cachedBrushDomain:brushDomain,currentDomain:currentDomain,parentSVG:parentSVG},_this2.getResizeMutation(domainBox,activeHandles))}}]:this.withinBounds({x:x,y:y},domainBox)&&!(0,_reactFastCompare.default)(domain,
currentDomain)?[{target:"parent",mutation:function(){return _objectSpread({isPanning:allowDrag,startX:x,startY:y,domainBox:domainBox,fullDomainBox:fullDomainBox,currentDomain:currentDomain,cachedBrushDomain:brushDomain,parentSVG:parentSVG},domainBox)}}]:allowDraw?[{target:"parent",mutation:function(){return _objectSpread({isSelecting:allowResize,domainBox:domainBox,fullDomainBox:fullDomainBox,parentSVG:parentSVG,cachedBrushDomain:brushDomain,cachedCurrentDomain:currentDomain,currentDomain:_this2.getMinimumDomain()},
_this2.getSelectionMutation({x:x,y:y},domainBox,brushDimension))}}]:{}},onMouseMove:function(evt,targetProps){if(!targetProps.isPanning&&!targetProps.isSelecting)return{};var brushDimension=targetProps.brushDimension,scale=targetProps.scale,isPanning=targetProps.isPanning,isSelecting=targetProps.isSelecting,fullDomainBox=targetProps.fullDomainBox,onBrushDomainChange=targetProps.onBrushDomainChange,allowResize=targetProps.allowResize,allowDrag=targetProps.allowDrag,parentSVG=targetProps.parentSVG||
_victoryCore.Selection.getParentSVG(evt),_Selection$getSVGEven2=_victoryCore.Selection.getSVGEventCoordinates(evt,parentSVG);evt=_Selection$getSVGEven2.x;_Selection$getSVGEven2=_Selection$getSVGEven2.y;if(!allowResize&&!allowDrag||!this.withinBounds({x:evt,y:_Selection$getSVGEven2},fullDomainBox))return{};if(allowDrag&&isPanning){brushDimension=targetProps.startX;isPanning=targetProps.startY;isSelecting=this.panBox(targetProps,{x:evt,y:_Selection$getSVGEven2});allowResize=this.constrainBox(isSelecting,
fullDomainBox);scale=_victoryCore.Selection.getBounds(_objectSpread({},allowResize,{scale:scale}));var mutatedProps=_objectSpread({currentDomain:scale,parentSVG:parentSVG,startX:isSelecting.x2>=fullDomainBox.x2||isSelecting.x1<=fullDomainBox.x1?brushDimension:evt,startY:isSelecting.y2>=fullDomainBox.y2||isSelecting.y1<=fullDomainBox.y1?isPanning:_Selection$getSVGEven2},allowResize);(0,_isFunction2.default)(onBrushDomainChange)&&onBrushDomainChange(scale,(0,_defaults2.default)({},mutatedProps,targetProps));
return[{target:"parent",mutation:function(){return mutatedProps}}]}if(allowResize&&isSelecting){fullDomainBox="y"!==brushDimension?evt:targetProps.x2;evt="x"!==brushDimension?_Selection$getSVGEven2:targetProps.y2;scale=_victoryCore.Selection.getBounds({x2:fullDomainBox,y2:evt,x1:targetProps.x1,y1:targetProps.y1,scale:scale});var _mutatedProps={x2:fullDomainBox,y2:evt,currentDomain:scale,parentSVG:parentSVG};(0,_isFunction2.default)(onBrushDomainChange)&&onBrushDomainChange(scale,(0,_defaults2.default)({},
_mutatedProps,targetProps));return[{target:"parent",mutation:function(){return _mutatedProps}}]}return{}},onMouseUp:function(evt,targetProps){evt=targetProps.x1;var y1=targetProps.y1,x2=targetProps.x2,y2=targetProps.y2,isPanning=targetProps.isPanning,isSelecting=targetProps.isSelecting,onBrushDomainChange=targetProps.onBrushDomainChange,onBrushDomainChangeEnd=targetProps.onBrushDomainChangeEnd,onBrushCleared=targetProps.onBrushCleared,allowResize=targetProps.allowResize,allowDrag=targetProps.allowDrag,
defaultBrushArea=targetProps.defaultBrushArea,defaultBrushHasArea=void 0!==defaultBrushArea&&"none"!==defaultBrushArea;defaultBrushArea=this.getDefaultBrushArea(defaultBrushArea,targetProps.domain,targetProps.cachedCurrentDomain||targetProps.currentDomain);var mutatedProps={isPanning:!1,isSelecting:!1};!allowResize&&!defaultBrushHasArea||evt!==x2&&y1!==y2?(allowDrag&&isPanning||allowResize&&isSelecting)&&(0,_isFunction2.default)(onBrushDomainChangeEnd)&&onBrushDomainChangeEnd(defaultBrushArea,(0,
_defaults2.default)({},mutatedProps,targetProps)):(mutatedProps.currentDomain=defaultBrushArea,(0,_isFunction2.default)(onBrushDomainChange)&&onBrushDomainChange(defaultBrushArea,(0,_defaults2.default)({},mutatedProps,targetProps)),(0,_isFunction2.default)(onBrushDomainChangeEnd)&&onBrushDomainChangeEnd(defaultBrushArea,(0,_defaults2.default)({},mutatedProps,targetProps)),(0,_isFunction2.default)(onBrushCleared)&&onBrushCleared(defaultBrushArea,(0,_defaults2.default)({},mutatedProps,targetProps)));
return[{target:"parent",mutation:function(){return mutatedProps}}]},onMouseLeave:function(evt){return"svg"===evt.target.nodeName?[{target:"parent",mutation:function(){return{isPanning:!1,isSelecting:!1}}}]:[]}};require=_objectSpread({},require,{onMouseDown:require.onMouseDown.bind(require),onMouseUp:require.onMouseUp.bind(require),onMouseLeave:require.onMouseLeave.bind(require),onMouseMove:(0,global.default)(require.onMouseMove.bind(require),16,{leading:!0,trailing:!1})});exports.default=require}
//# sourceMappingURL=module$node_modules$victory_brush_container$lib$brush_helpers.js.map
