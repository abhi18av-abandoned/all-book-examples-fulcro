shadow$provide.module$node_modules$react_motion$lib$mergeDiff=function(global,require,module,exports){exports.__esModule=!0;exports["default"]=function(prev,next,onRemove){for(var prevKeyIndex={},i=0;i<prev.length;i++)prevKeyIndex[prev[i].key]=i;var nextKeyIndex={};for(i=0;i<next.length;i++)nextKeyIndex[next[i].key]=i;var ret=[];for(i=0;i<next.length;i++)ret[i]=next[i];for(i=0;i<prev.length;i++)if(!Object.prototype.hasOwnProperty.call(nextKeyIndex,prev[i].key)){var fill=onRemove(i,prev[i]);null!=
fill&&ret.push(fill)}return ret.sort(function(a,b){var nextOrderA=nextKeyIndex[a.key],nextOrderB=nextKeyIndex[b.key],prevOrderA=prevKeyIndex[a.key],prevOrderB=prevKeyIndex[b.key];if(null!=nextOrderA&&null!=nextOrderB)return nextKeyIndex[a.key]-nextKeyIndex[b.key];if(null!=prevOrderA&&null!=prevOrderB)return prevKeyIndex[a.key]-prevKeyIndex[b.key];if(null!=nextOrderA){for(a=0;a<next.length;a++)if(b=next[a].key,Object.prototype.hasOwnProperty.call(prevKeyIndex,b)){if(nextOrderA<nextKeyIndex[b]&&prevOrderB>
prevKeyIndex[b])return-1;if(nextOrderA>nextKeyIndex[b]&&prevOrderB<prevKeyIndex[b])break}return 1}for(a=0;a<next.length;a++)if(b=next[a].key,Object.prototype.hasOwnProperty.call(prevKeyIndex,b)){if(nextOrderB<nextKeyIndex[b]&&prevOrderA>prevKeyIndex[b])return 1;if(nextOrderB>nextKeyIndex[b]&&prevOrderA<prevKeyIndex[b])break}return-1})};module.exports=exports["default"]}
//# sourceMappingURL=module$node_modules$react_motion$lib$mergeDiff.js.map
