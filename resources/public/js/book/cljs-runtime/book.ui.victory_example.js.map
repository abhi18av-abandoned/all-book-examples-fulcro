{"version":3,"sources":["book/ui/victory_example.cljs"],"mappings":"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","names":["book.ui.victory-example/us-dollars","n","cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic","book.ui.victory-example/vchart","com.fulcrologic.fulcro.algorithms.react-interop/react-factory","js/module$node_modules$victory$lib$index.VictoryChart","book.ui.victory-example/vaxis","js/module$node_modules$victory$lib$index.VictoryAxis","book.ui.victory-example/vline","js/module$node_modules$victory$lib$index.VictoryLine","options__72617__auto__","com.fulcrologic.fulcro.components/wrapped-render","map__85002","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/book","js/book.ui","js/book.ui.victory-example","js/book.ui.victory-example.YearlyValueChart","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj85035","G__85036","G__85037","goog.object/get","obj85039","com.fulcrologic.fulcro.components/configure-component!","book.ui.victory-example/YearlyValueChart","this","label","plot-data","x-step","map__85006","start-year","cljs.core/min","cljs.core.map.cljs$core$IFn$_invoke$arity$2","end-year","cljs.core/max","years","cljs.core.range.cljs$core$IFn$_invoke$arity$3","dates","p1__85001#","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","js/Date","min-value","max-value","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","p__85008","p__85009","map__85010","map__85011","acc","value","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","x__4222__auto__","y__4223__auto__","x__4219__auto__","y__4220__auto__","points","p__85017","map__85018","year","G__85020","G__85021","G__85022","G__85023","G__85024","d","G__85027","y","G__85030","book.ui.victory-example/yearly-value-chart","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","params","com.fulcrologic.fulcro.components/make-state-map","js/book.ui.victory-example.Root","obj85043","G__85044","G__85045","obj85047","book.ui.victory-example/Root","props","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3"],"sourcesContent":["(ns book.ui.victory-example\n  (:require\n    [cljs.pprint :refer [cl-format]]\n    ;; REQUIRES shadow-cljs, with \"victory\" in package.json\n    [\"victory\" :refer [VictoryChart VictoryAxis VictoryLine]]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.algorithms.react-interop :as interop]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [taoensso.timbre :as log]))\n\n(defn us-dollars [n]\n  (str \"$\" (cl-format nil \"~:d\" n)))\n\n(def vchart (interop/react-factory VictoryChart))\n(def vaxis (interop/react-factory VictoryAxis))\n(def vline (interop/react-factory VictoryLine))\n\n;; \" [ {:year 1991 :value 2345 } ...] \"\n(defsc YearlyValueChart [this {:keys [label plot-data x-step]}]\n  (let [start-year (apply min (map :year plot-data))\n        end-year   (apply max (map :year plot-data))\n        years      (range start-year (inc end-year) x-step)\n        dates      (mapv #(new js/Date % 1 2) years)\n        {:keys [min-value\n                max-value]} (reduce (fn [{:keys [min-value max-value] :as acc}\n                                         {:keys [value] :as n}]\n                                      (assoc acc\n                                        :min-value (min min-value value)\n                                        :max-value (max max-value value)))\n                              {}\n                              plot-data)\n        min-value  (int (* 0.8 min-value))\n        max-value  (int (* 1.2 max-value))\n        points     (mapv (fn [{:keys [year value]}]\n                           {:x (new js/Date year 1 2)\n                            :y value})\n                     plot-data)]\n    (vchart nil\n      (vaxis {:label      label\n              :standalone false\n              :scale      \"time\"\n              :tickFormat (fn [d] (.getFullYear d))\n              :tickValues dates})\n      (vaxis {:dependentAxis true\n              :standalone    false\n              :tickFormat    (fn [y] (us-dollars y))\n              :domain        #js [min-value max-value]})\n      (vline {:data points}))))\n\n(def yearly-value-chart (comp/factory YearlyValueChart))\n\n(defsc Root [this props]\n  {:initial-state {:label     \"Yearly Value\"\n                   :x-step    2\n                   :plot-data [{:year 1983 :value 20}\n                               {:year 1984 :value 100}\n                               {:year 1985 :value 90}\n                               {:year 1986 :value 89}\n                               {:year 1987 :value 88}\n                               {:year 1988 :value 85}\n                               {:year 1989 :value 83}\n                               {:year 1990 :value 80}\n                               {:year 1991 :value 70}\n                               {:year 1992 :value 80}\n                               {:year 1993 :value 90}\n                               {:year 1994 :value 95}\n                               {:year 1995 :value 110}\n                               {:year 1996 :value 120}\n                               {:year 1997 :value 160}\n                               {:year 1998 :value 170}\n                               {:year 1999 :value 180}\n                               {:year 2000 :value 180}\n                               {:year 2001 :value 200}]}}\n  (dom/div\n    (yearly-value-chart props)))\n\n"]}