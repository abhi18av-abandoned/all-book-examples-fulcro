shadow$provide.module$node_modules$victory_bar$lib$geometry_helper_methods=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.point=exports.circle=void 0;var point=function(x,y){return{x:x,y:y,distance:function(p1){return Math.sqrt(Math.pow(this.x-p1.x,2)+Math.pow(this.y-p1.y,2))},add:function(p1){return point(this.x+p1.x,this.y+p1.y)},subtract:function(p1){return point(this.x-p1.x,this.y-p1.y)},scalarMult:function(n){return point(this.x*n,this.y*
n)},scalarDivide:function(n){if(0===n)throw Error("Division by 0 error");return point(this.x/n,this.y/n)},equals:function(p1){return this.x===p1.x&&this.y===p1.y}}};exports.point=point;exports.circle=function(center,radius){return{center:center,radius:radius,hasIntersection:function(circle1){var r0=this.radius,r1=circle1.radius;circle1=this.center.distance(circle1.center);return circle1>r0+r1||circle1<Math.abs(r0-r1)?!1:!0},equals:function(circle1){var P0=this.center,P1=circle1.center;return this.radius===
circle1.radius&&P0.equals(P1)},intersection:function(circle1){var P0=this.center,P1=circle1.center,r0=this.radius,r1=circle1.radius,d=P0.distance(P1);if(!this.hasIntersection(circle1)||this.equals(circle1))return[];circle1=(Math.pow(r0,2)-Math.pow(r1,2)+Math.pow(d,2))/(2*d);r0=Math.sqrt(Math.pow(r0,2)-Math.pow(circle1,2));r1=P0.add(P1.subtract(P0).scalarMult(circle1).scalarDivide(d));circle1=P0.x;P0=P0.y;var x1=P1.x;P1=P1.y;var x2=r1.x;r1=r1.y;d=[point(x2-r0*(P1-P0)/d,r1+r0*(x1-circle1)/d),point(x2+
r0*(P1-P0)/d,r1-r0*(x1-circle1)/d)];d.sort(function(Point1,Point2){return Point1.x-Point2.x});return d},solveX:function(y){y=Math.sqrt(Math.pow(this.radius,2)-Math.pow(y-this.center.y,2));return[this.center.x-y,this.center.x+y]},solveY:function(x){x=Math.sqrt(Math.pow(this.radius,2)-Math.pow(x-this.center.x,2));return[this.center.y-x,this.center.y+x]}}}}
//# sourceMappingURL=module$node_modules$victory_bar$lib$geometry_helper_methods.js.map
