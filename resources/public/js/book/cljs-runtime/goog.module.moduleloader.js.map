{
"version":3,
"file":"goog.module.moduleloader.js",
"lineCount":247,
"mappings":"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",
"sources":["goog/module/moduleloader.js"],
"sourcesContent":["// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview The module loader for loading modules across the network.\n *\n * Browsers do not guarantee that scripts appended to the document\n * are executed in the order they are added. For production mode, we use\n * XHRs to load scripts, because they do not have this problem and they\n * have superior mechanisms for handling failure. However, XHR-evaled\n * scripts are harder to debug.\n *\n * In debugging mode, we use normal script tags. In order to make this work,\n * we load the scripts in serial: we do not execute script B to the document\n * until we are certain that script A is finished loading.\n *\n */\n\ngoog.provide('goog.module.ModuleLoader');\n\ngoog.require('goog.Timer');\ngoog.require('goog.array');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventHandler');\ngoog.require('goog.events.EventId');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.html.TrustedResourceUrl');\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.log');\ngoog.require('goog.module.AbstractModuleLoader');\ngoog.require('goog.net.BulkLoader');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.jsloader');\ngoog.require('goog.userAgent');\ngoog.require('goog.userAgent.product');\n\n\n\n/**\n * A class that loads JavaScript modules.\n * @constructor\n * @extends {goog.events.EventTarget}\n * @implements {goog.module.AbstractModuleLoader}\n */\ngoog.module.ModuleLoader = function() {\n  goog.module.ModuleLoader.base(this, 'constructor');\n\n  /**\n   * Event handler for managing handling events.\n   * @type {goog.events.EventHandler<!goog.module.ModuleLoader>}\n   * @private\n   */\n  this.eventHandler_ = new goog.events.EventHandler(this);\n\n  /**\n   * A map from module IDs to goog.module.ModuleLoader.LoadStatus.\n   * @type {!Object<Array<string>, goog.module.ModuleLoader.LoadStatus>}\n   * @private\n   */\n  this.loadingModulesStatus_ = {};\n};\ngoog.inherits(goog.module.ModuleLoader, goog.events.EventTarget);\n\n\n/**\n * A logger.\n * @type {goog.log.Logger}\n * @protected\n */\ngoog.module.ModuleLoader.prototype.logger =\n    goog.log.getLogger('goog.module.ModuleLoader');\n\n\n/**\n * Whether debug mode is enabled.\n * @type {boolean}\n * @private\n */\ngoog.module.ModuleLoader.prototype.debugMode_ = false;\n\n\n/**\n * Whether source url injection is enabled.\n * @type {boolean}\n * @private\n */\ngoog.module.ModuleLoader.prototype.sourceUrlInjection_ = false;\n\n\n/**\n * @return {boolean} Whether sourceURL affects stack traces.\n */\ngoog.module.ModuleLoader.supportsSourceUrlStackTraces = function() {\n  return goog.userAgent.product.CHROME ||\n      (goog.labs.userAgent.browser.isFirefox() &&\n       goog.labs.userAgent.browser.isVersionOrHigher('36'));\n};\n\n\n/**\n * @return {boolean} Whether sourceURL affects the debugger.\n */\ngoog.module.ModuleLoader.supportsSourceUrlDebugger = function() {\n  return goog.userAgent.product.CHROME || goog.userAgent.GECKO;\n};\n\n\n/**\n * Gets the debug mode for the loader.\n * @return {boolean} Whether the debug mode is enabled.\n */\ngoog.module.ModuleLoader.prototype.getDebugMode = function() {\n  return this.debugMode_;\n};\n\n\n/**\n * Sets the debug mode for the loader.\n * @param {boolean} debugMode Whether the debug mode is enabled.\n */\ngoog.module.ModuleLoader.prototype.setDebugMode = function(debugMode) {\n  this.debugMode_ = debugMode;\n};\n\n\n/**\n * When enabled, we will add a sourceURL comment to the end of all scripts\n * to mark their origin.\n *\n * On WebKit, stack traces will reflect the sourceURL comment, so this is\n * useful for debugging webkit stack traces in production.\n *\n * Notice that in debug mode, we will use source url injection + eval rather\n * then appending script nodes to the DOM, because the scripts will load far\n * faster.  (Appending script nodes is very slow, because we can't parallelize\n * the downloading and evaling of the script).\n *\n * The cost of appending sourceURL information is negligible when compared to\n * the cost of evaling the script. Almost all clients will want this on.\n *\n * TODO(nicksantos): Turn this on by default. We may want to turn this off\n * for clients that inject their own sourceURL.\n *\n * @param {boolean} enabled Whether source url injection is enabled.\n */\ngoog.module.ModuleLoader.prototype.setSourceUrlInjection = function(enabled) {\n  this.sourceUrlInjection_ = enabled;\n};\n\n\n/**\n * @return {boolean} Whether we're using source url injection.\n * @private\n */\ngoog.module.ModuleLoader.prototype.usingSourceUrlInjection_ = function() {\n  return this.sourceUrlInjection_ ||\n      (this.getDebugMode() &&\n       goog.module.ModuleLoader.supportsSourceUrlStackTraces());\n};\n\n\n/** @override */\ngoog.module.ModuleLoader.prototype.loadModules = function(\n    ids, moduleInfoMap, opt_successFn, opt_errorFn, opt_timeoutFn,\n    opt_forceReload) {\n  var loadStatus = this.loadingModulesStatus_[ids] ||\n      new goog.module.ModuleLoader.LoadStatus();\n  loadStatus.loadRequested = true;\n  loadStatus.successFn = opt_successFn || null;\n  loadStatus.errorFn = opt_errorFn || null;\n\n  if (!this.loadingModulesStatus_[ids]) {\n    // Modules were not prefetched.\n    this.loadingModulesStatus_[ids] = loadStatus;\n    this.downloadModules_(ids, moduleInfoMap);\n    // TODO(user): Need to handle timeouts in the module loading code.\n  } else if (goog.isDefAndNotNull(loadStatus.responseTexts)) {\n    // Modules prefetch is complete.\n    this.evaluateCode_(ids);\n  }\n  // Otherwise modules prefetch is in progress, and these modules will be\n  // executed after the prefetch is complete.\n};\n\n\n/**\n * Evaluate the JS code.\n * @param {Array<string>} moduleIds The module ids.\n * @private\n */\ngoog.module.ModuleLoader.prototype.evaluateCode_ = function(moduleIds) {\n  this.dispatchEvent(\n      new goog.module.ModuleLoader.RequestSuccessEvent(moduleIds));\n\n  goog.log.info(this.logger, 'evaluateCode ids:' + moduleIds);\n  var loadStatus = this.loadingModulesStatus_[moduleIds];\n  var uris = loadStatus.requestUris;\n  var texts = loadStatus.responseTexts;\n  var error = null;\n  try {\n    if (this.usingSourceUrlInjection_()) {\n      for (var i = 0; i < uris.length; i++) {\n        var uri = uris[i];\n        goog.globalEval(texts[i] + ' //# sourceURL=' + uri);\n      }\n    } else {\n      goog.globalEval(texts.join('\\n'));\n    }\n  } catch (e) {\n    error = e;\n    // TODO(user): Consider throwing an exception here.\n    goog.log.warning(\n        this.logger, 'Loaded incomplete code for module(s): ' + moduleIds, e);\n  }\n\n  this.dispatchEvent(new goog.module.ModuleLoader.EvaluateCodeEvent(moduleIds));\n\n  if (error) {\n    this.handleErrorHelper_(\n        moduleIds, loadStatus.errorFn, null /* status */, error);\n  } else if (loadStatus.successFn) {\n    loadStatus.successFn();\n  }\n  delete this.loadingModulesStatus_[moduleIds];\n};\n\n\n/**\n * Handles a successful response to a request for prefetch or load one or more\n * modules.\n *\n * @param {goog.net.BulkLoader} bulkLoader The bulk loader.\n * @param {Array<string>} moduleIds The ids of the modules requested.\n * @private\n */\ngoog.module.ModuleLoader.prototype.handleSuccess_ = function(\n    bulkLoader, moduleIds) {\n  goog.log.info(this.logger, 'Code loaded for module(s): ' + moduleIds);\n\n  var loadStatus = this.loadingModulesStatus_[moduleIds];\n  loadStatus.responseTexts = bulkLoader.getResponseTexts();\n\n  if (loadStatus.loadRequested) {\n    this.evaluateCode_(moduleIds);\n  }\n\n  // NOTE: A bulk loader instance is used for loading a set of module ids.\n  // Once these modules have been loaded successfully or in error the bulk\n  // loader should be disposed as it is not needed anymore. A new bulk loader\n  // is instantiated for any new modules to be loaded. The dispose is called\n  // on a timer so that the bulkloader has a chance to release its\n  // objects.\n  goog.Timer.callOnce(bulkLoader.dispose, 5, bulkLoader);\n};\n\n\n/** @override */\ngoog.module.ModuleLoader.prototype.prefetchModule = function(id, moduleInfo) {\n  // Do not prefetch in debug mode.\n  if (this.getDebugMode()) {\n    return;\n  }\n  var loadStatus = this.loadingModulesStatus_[[id]];\n  if (loadStatus) {\n    return;\n  }\n\n  var moduleInfoMap = {};\n  moduleInfoMap[id] = moduleInfo;\n  this.loadingModulesStatus_[[id]] = new goog.module.ModuleLoader.LoadStatus();\n  this.downloadModules_([id], moduleInfoMap);\n};\n\n\n/**\n * Downloads a list of JavaScript modules.\n *\n * @param {Array<string>} ids The module ids in dependency order.\n * @param {!Object<string, !goog.module.ModuleInfo>} moduleInfoMap A mapping\n *     from module id to ModuleInfo object.\n * @private\n */\ngoog.module.ModuleLoader.prototype.downloadModules_ = function(\n    ids, moduleInfoMap) {\n  var trustedUris = [];\n  for (var i = 0; i < ids.length; i++) {\n    goog.array.extend(trustedUris, moduleInfoMap[ids[i]].getUris());\n  }\n  var uris = goog.array.map(trustedUris, goog.html.TrustedResourceUrl.unwrap);\n  goog.log.info(this.logger, 'downloadModules ids:' + ids + ' uris:' + uris);\n\n  if (this.getDebugMode() && !this.usingSourceUrlInjection_()) {\n    // In debug mode use <script> tags rather than XHRs to load the files.\n    // This makes it possible to debug and inspect stack traces more easily.\n    // It's also possible to use it to load JavaScript files that are hosted on\n    // another domain.\n    // The scripts need to load serially, so this is much slower than parallel\n    // script loads with source url injection.\n    goog.net.jsloader.safeLoadMany(trustedUris);\n  } else {\n    var loadStatus = this.loadingModulesStatus_[ids];\n    loadStatus.requestUris = uris;\n\n    var bulkLoader = new goog.net.BulkLoader(uris);\n\n    var eventHandler = this.eventHandler_;\n    eventHandler.listen(\n        bulkLoader, goog.net.EventType.SUCCESS,\n        goog.bind(this.handleSuccess_, this, bulkLoader, ids));\n    eventHandler.listen(\n        bulkLoader, goog.net.EventType.ERROR,\n        goog.bind(this.handleError_, this, bulkLoader, ids));\n    bulkLoader.load();\n  }\n};\n\n\n/**\n * Handles an error during a request for one or more modules.\n * @param {goog.net.BulkLoader} bulkLoader The bulk loader.\n * @param {Array<string>} moduleIds The ids of the modules requested.\n * @param {number} status The response status.\n * @private\n */\ngoog.module.ModuleLoader.prototype.handleError_ = function(\n    bulkLoader, moduleIds, status) {\n  var loadStatus = this.loadingModulesStatus_[moduleIds];\n  // The bulk loader doesn't cancel other requests when a request fails. We will\n  // delete the loadStatus in the first failure, so it will be undefined in\n  // subsequent errors.\n  if (loadStatus) {\n    delete this.loadingModulesStatus_[moduleIds];\n    this.handleErrorHelper_(moduleIds, loadStatus.errorFn, status);\n  }\n\n  // NOTE: A bulk loader instance is used for loading a set of module ids. Once\n  // these modules have been loaded successfully or in error the bulk loader\n  // should be disposed as it is not needed anymore. A new bulk loader is\n  // instantiated for any new modules to be loaded. The dispose is called\n  // on another thread so that the bulkloader has a chance to release its\n  // objects.\n  goog.Timer.callOnce(bulkLoader.dispose, 5, bulkLoader);\n};\n\n\n/**\n * Handles an error during a request for one or more modules.\n * @param {Array<string>} moduleIds The ids of the modules requested.\n * @param {?function(?number)} errorFn The function to call on failure.\n * @param {?number} status The response status.\n * @param {!Error=} opt_error The error encountered, if available.\n * @private\n */\ngoog.module.ModuleLoader.prototype.handleErrorHelper_ = function(\n    moduleIds, errorFn, status, opt_error) {\n  this.dispatchEvent(\n      new goog.module.ModuleLoader.RequestErrorEvent(moduleIds, opt_error));\n\n  goog.log.warning(this.logger, 'Request failed for module(s): ' + moduleIds);\n\n  if (errorFn) {\n    errorFn(status);\n  }\n};\n\n\n/** @override */\ngoog.module.ModuleLoader.prototype.disposeInternal = function() {\n  goog.module.ModuleLoader.superClass_.disposeInternal.call(this);\n\n  this.eventHandler_.dispose();\n  this.eventHandler_ = null;\n};\n\n\n/**\n * Events dispatched by the ModuleLoader.\n * @const\n */\ngoog.module.ModuleLoader.EventType = {\n  /**\n   * @const {!goog.events.EventId<\n   *     !goog.module.ModuleLoader.EvaluateCodeEvent>} Called after the code for\n   *     a module is evaluated.\n   */\n  EVALUATE_CODE:\n      new goog.events.EventId(goog.events.getUniqueId('evaluateCode')),\n\n  /**\n   * @const {!goog.events.EventId<\n   *     !goog.module.ModuleLoader.RequestSuccessEvent>} Called when the\n   *     BulkLoader finishes successfully.\n   */\n  REQUEST_SUCCESS:\n      new goog.events.EventId(goog.events.getUniqueId('requestSuccess')),\n\n  /**\n   * @const {!goog.events.EventId<\n   *     !goog.module.ModuleLoader.RequestErrorEvent>} Called when the\n   *     BulkLoader fails, or code loading fails.\n   */\n  REQUEST_ERROR:\n      new goog.events.EventId(goog.events.getUniqueId('requestError'))\n};\n\n\n\n/**\n * @param {Array<string>} moduleIds The ids of the modules being evaluated.\n * @constructor\n * @extends {goog.events.Event}\n * @final\n * @protected\n */\ngoog.module.ModuleLoader.EvaluateCodeEvent = function(moduleIds) {\n  goog.module.ModuleLoader.EvaluateCodeEvent.base(\n      this, 'constructor', goog.module.ModuleLoader.EventType.EVALUATE_CODE);\n\n  /**\n   * @type {Array<string>}\n   */\n  this.moduleIds = moduleIds;\n};\ngoog.inherits(goog.module.ModuleLoader.EvaluateCodeEvent, goog.events.Event);\n\n\n\n/**\n * @param {Array<string>} moduleIds The ids of the modules being evaluated.\n * @constructor\n * @extends {goog.events.Event}\n * @final\n * @protected\n */\ngoog.module.ModuleLoader.RequestSuccessEvent = function(moduleIds) {\n  goog.module.ModuleLoader.RequestSuccessEvent.base(\n      this, 'constructor', goog.module.ModuleLoader.EventType.REQUEST_SUCCESS);\n\n  /**\n   * @type {Array<string>}\n   */\n  this.moduleIds = moduleIds;\n};\ngoog.inherits(goog.module.ModuleLoader.RequestSuccessEvent, goog.events.Event);\n\n\n\n/**\n * @param {Array<string>} moduleIds The ids of the modules being evaluated.\n * @param {!Error=} opt_error The error encountered, if available.\n * @constructor\n * @extends {goog.events.Event}\n * @final\n * @protected\n */\ngoog.module.ModuleLoader.RequestErrorEvent = function(moduleIds, opt_error) {\n  goog.module.ModuleLoader.RequestErrorEvent.base(\n      this, 'constructor', goog.module.ModuleLoader.EventType.REQUEST_ERROR);\n\n  /**\n   * @type {Array<string>}\n   */\n  this.moduleIds = moduleIds;\n\n  /** @type {?Error} */\n  this.error = opt_error || null;\n};\ngoog.inherits(goog.module.ModuleLoader.RequestErrorEvent, goog.events.Event);\n\n\n\n/**\n * A class that keeps the state of the module during the loading process. It is\n * used to save loading information between modules download and evaluation.\n * @constructor\n * @final\n */\ngoog.module.ModuleLoader.LoadStatus = function() {\n  /**\n   * The request uris.\n   * @type {Array<string>}\n   */\n  this.requestUris = null;\n\n  /**\n   * The response texts.\n   * @type {Array<string>}\n   */\n  this.responseTexts = null;\n\n  /**\n   * Whether loadModules was called for the set of modules referred by this\n   * status.\n   * @type {boolean}\n   */\n  this.loadRequested = false;\n\n  /**\n   * Success callback.\n   * @type {?function()}\n   */\n  this.successFn = null;\n\n  /**\n   * Error callback.\n   * @type {?function(?number)}\n   */\n  this.errorFn = null;\n};\n"],
"names":["goog","provide","require","module","ModuleLoader","goog.module.ModuleLoader","base","eventHandler_","events","EventHandler","loadingModulesStatus_","inherits","EventTarget","prototype","logger","log","getLogger","debugMode_","sourceUrlInjection_","supportsSourceUrlStackTraces","goog.module.ModuleLoader.supportsSourceUrlStackTraces","userAgent","product","CHROME","labs","browser","isFirefox","isVersionOrHigher","supportsSourceUrlDebugger","goog.module.ModuleLoader.supportsSourceUrlDebugger","GECKO","getDebugMode","goog.module.ModuleLoader.prototype.getDebugMode","setDebugMode","goog.module.ModuleLoader.prototype.setDebugMode","debugMode","setSourceUrlInjection","goog.module.ModuleLoader.prototype.setSourceUrlInjection","enabled","usingSourceUrlInjection_","goog.module.ModuleLoader.prototype.usingSourceUrlInjection_","loadModules","goog.module.ModuleLoader.prototype.loadModules","ids","moduleInfoMap","opt_successFn","opt_errorFn","opt_timeoutFn","opt_forceReload","loadStatus","LoadStatus","loadRequested","successFn","errorFn","downloadModules_","isDefAndNotNull","responseTexts","evaluateCode_","goog.module.ModuleLoader.prototype.evaluateCode_","moduleIds","dispatchEvent","RequestSuccessEvent","info","uris","requestUris","texts","error","i","length","uri","globalEval","join","e","warning","EvaluateCodeEvent","handleErrorHelper_","handleSuccess_","goog.module.ModuleLoader.prototype.handleSuccess_","bulkLoader","getResponseTexts","Timer","callOnce","dispose","prefetchModule","goog.module.ModuleLoader.prototype.prefetchModule","id","moduleInfo","goog.module.ModuleLoader.prototype.downloadModules_","trustedUris","array","extend","getUris","map","html","TrustedResourceUrl","unwrap","net","jsloader","safeLoadMany","BulkLoader","eventHandler","listen","EventType","SUCCESS","bind","ERROR","handleError_","load","goog.module.ModuleLoader.prototype.handleError_","status","goog.module.ModuleLoader.prototype.handleErrorHelper_","opt_error","RequestErrorEvent","disposeInternal","goog.module.ModuleLoader.prototype.disposeInternal","superClass_","call","EVALUATE_CODE","EventId","getUniqueId","REQUEST_SUCCESS","REQUEST_ERROR","goog.module.ModuleLoader.EvaluateCodeEvent","Event","goog.module.ModuleLoader.RequestSuccessEvent","goog.module.ModuleLoader.RequestErrorEvent","goog.module.ModuleLoader.LoadStatus"]
}
