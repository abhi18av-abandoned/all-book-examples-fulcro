{
"version":3,
"file":"module$node_modules$victory_core$lib$victory_util$style.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGpHC,MAAAC,eAAA,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAAI,QAAA,CAAkB,IAAK,EAWvB,KAAIC,kBAAoBA,QAAS,CAACC,GAAD,CAAM,CACrC,IADqC,IAC5BC,KAAOC,SAAAC,OADqB,CACHC,KAAWC,KAAJ,CAAiB,CAAP,CAAAJ,IAAA,CAAWA,IAAX,CAAkB,CAAlB,CAAsB,CAAhC,CADJ,CACwCK,KAAO,CAApF,CAAuFA,IAAvF,CAA8FL,IAA9F,CAAoGK,IAAA,EAApG,CACEF,IAAA,CAAKE,IAAL,CAAY,CAAZ,CAAA,CAAiBJ,SAAA,CAAUI,IAAV,CAGnB,IAAkB,CAAlB,CAAIF,IAAAD,OAAJ,CACE,MAAOC,KAAAG,OAAA,CAAY,QAAS,CAACC,IAAD,CAAOC,UAAP,CAAmB,CAC7C,MAAO,CAACD,IAAD,CAAOT,iBAAA,CAAkBU,UAAlB,CAAP,CAAAC,KAAA,CAA2C,GAA3C,CADsC,CAAxC,CAEJX,iBAAA,CAAkBC,GAAlB,CAFI,CAAAW,KAAA,EAIP,IAAYC,IAAAA,EAAZ,GAAIZ,GAAJ,EAAiC,IAAjC;AAAyBA,GAAzB,EAAwD,QAAxD,GAAyC,MAAOA,IAAhD,CACE,MAAOA,IAGLa,KAAAA,CAAa,EAEjB,KAAKC,IAAIA,GAAT,GAAgBd,IAAhB,CACMA,GAAAe,eAAA,CAAmBD,GAAnB,CAAJ,GACMjB,IACJ,CADYG,GAAA,CAAIc,GAAJ,CACZ,CAAAD,IAAAG,KAAA,CAAgB,EAAAC,OAAA,CAAUH,GAAV,CAAe,GAAf,CAAAG,OAAA,CAA2BpB,IAA3B,CAAkC,GAAlC,CAAhB,CAFF,CAMF,OAAOgB,KAAAH,KAAA,CAAgB,GAAhB,CAAAC,KAAA,EAvB4B,CAmDvCjB,QAAAI,QAAA,CAxBeoB,CACbnB,kBAAmBA,iBADNmB,CAUbC,cAAeA,QAAS,CAACC,IAAD,CAAO,CAC7B,IAAIC,OAAS,CACXC,UAAW,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CADA,CAEXC,YAAa,iFAAA,MAAA,CAAA,GAAA,CAFF,CAGXC,QAAS,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAHE,CAIXC,KAAM,CAAC,SAAD;AAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAJK,CAKXC,KAAM,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CALK,CAMXC,IAAK,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CANM,CAOXC,KAAM,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAPK,CAQXC,MAAO,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CARI,CAUb,OAAOT,KAAA,CAAOC,MAAA,CAAOD,IAAP,CAAP,CAAsBC,MAAAC,UAXA,CAVlBJ,CA5CqG;",
"sources":["node_modules/victory-core/lib/victory-util/style.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$victory_core$lib$victory_util$style\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Given an object with CSS/SVG transform definitions, return the string value\n * for use with the `transform` CSS property or SVG attribute. Note that we\n * can't always guarantee the order will match the author's intended order, so\n * authors should only use the object notation if they know that their transform\n * is commutative or that there is only one.\n * @param {Object} obj An object of transform definitions.\n * @returns {String} The generated transform string.\n */\nvar toTransformString = function (obj) {\n  for (var _len = arguments.length, more = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    more[_key - 1] = arguments[_key];\n  }\n\n  if (more.length > 0) {\n    return more.reduce(function (memo, currentObj) {\n      return [memo, toTransformString(currentObj)].join(\" \");\n    }, toTransformString(obj)).trim();\n  } else {\n    if (obj === undefined || obj === null || typeof obj === \"string\") {\n      return obj;\n    }\n\n    var transforms = [];\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        var value = obj[key];\n        transforms.push(\"\".concat(key, \"(\").concat(value, \")\"));\n      }\n    }\n\n    return transforms.join(\" \").trim();\n  }\n};\n\nvar _default = {\n  toTransformString: toTransformString,\n\n  /**\n   * Given the name of a color scale, getColorScale will return an array\n   * of 5 hex string values in that color scale. If no 'name' parameter\n   * is given, it will return the Victory default grayscale.\n   * @param {String} name The name of the color scale to return (optional).\n   * @returns {Array} An array of 5 hex string values composing a color scale.\n   */\n  getColorScale: function (name) {\n    var scales = {\n      grayscale: [\"#cccccc\", \"#969696\", \"#636363\", \"#252525\"],\n      qualitative: [\"#334D5C\", \"#45B29D\", \"#EFC94C\", \"#E27A3F\", \"#DF5A49\", \"#4F7DA1\", \"#55DBC1\", \"#EFDA97\", \"#E2A37F\", \"#DF948A\"],\n      heatmap: [\"#428517\", \"#77D200\", \"#D6D305\", \"#EC8E19\", \"#C92B05\"],\n      warm: [\"#940031\", \"#C43343\", \"#DC5429\", \"#FF821D\", \"#FFAF55\"],\n      cool: [\"#2746B9\", \"#0B69D4\", \"#2794DB\", \"#31BB76\", \"#60E83B\"],\n      red: [\"#FCAE91\", \"#FB6A4A\", \"#DE2D26\", \"#A50F15\", \"#750B0E\"],\n      blue: [\"#002C61\", \"#004B8F\", \"#006BC9\", \"#3795E5\", \"#65B4F4\"],\n      green: [\"#354722\", \"#466631\", \"#649146\", \"#8AB25C\", \"#A9C97E\"]\n    };\n    return name ? scales[name] : scales.grayscale;\n  }\n};\nexports.default = _default;\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","default","toTransformString","obj","_len","arguments","length","more","Array","_key","reduce","memo","currentObj","join","trim","undefined","transforms","key","hasOwnProperty","push","concat","_default","getColorScale","name","scales","grayscale","qualitative","heatmap","warm","cool","red","blue","green"]
}
