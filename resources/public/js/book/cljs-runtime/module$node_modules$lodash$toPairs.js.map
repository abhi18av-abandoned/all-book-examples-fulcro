{
"version":3,
"file":"module$node_modules$lodash$toPairs.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC3FC,MAAAA,CAAgBH,OAAA,CAAQ,2CAAR,CAChBI,QAAAA,CAAOJ,OAAA,CAAQ,iCAAR,CA0BPK,QAAAA,CAAUF,MAAA,CAAcC,OAAd,CAEdH,OAAAC,QAAA,CAAiBG,OA9B8E;",
"sources":["node_modules/lodash/toPairs.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$lodash$toPairs\"] = function(global,require,module,exports) {\nvar createToPairs = require('./_createToPairs'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nmodule.exports = toPairs;\n\n};"],
"names":["shadow$provide","global","require","module","exports","createToPairs","keys","toPairs"]
}
