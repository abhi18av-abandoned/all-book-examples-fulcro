{"version":3,"sources":["book/demos/pre_merge/post_mutation_countdown_many.cljs"],"mappings":"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","names":["book.demos.pre-merge.post-mutation-countdown-many/all-counters","com.wsscode.pathom.connect/resolver","book.demos.pre-merge.post-mutation-countdown-many/counter-resolver","env","_","book.demos.pre-merge.post-mutation-countdown-many/resolvers","book.demos.pre-merge.post-mutation-countdown-many/initialize-counters","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","p__89600","map__89601","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ref","p1__89599#","cljs.core.update_in.cljs$core$IFn$_invoke$arity$3","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__89603","com.fulcrologic.fulcro.components/props","js/book","js/book.demos","js/book.demos.pre-merge","js/book.demos.pre-merge.post-mutation-countdown-many","js/book.demos.pre-merge.post-mutation-countdown-many.Countdown","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj89606","G__89607","G__89608","goog.object/get","obj89610","com.fulcrologic.fulcro.components/configure-component!","book.demos.pre-merge.post-mutation-countdown-many/Countdown","counter-label","count","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","done?","com.fulcrologic.fulcro.mutations/set-value!","book.demos.pre-merge.post-mutation-countdown-many/ui-countdown","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__89611","js/book.demos.pre-merge.post-mutation-countdown-many.Root","obj89614","G__89615","G__89616","obj89618","book.demos.pre-merge.post-mutation-countdown-many/Root","all-counters","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core/seq","cljs.core.mapv.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.data_fetch.load_BANG_.cljs$core$IFn$_invoke$arity$4"],"sourcesContent":["(ns book.demos.pre-merge.post-mutation-countdown-many\n  (:require\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [book.demos.util :refer [now]]\n    [com.fulcrologic.fulcro.mutations :as m]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.wsscode.pathom.connect :as pc]))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; SERVER:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def all-counters\n  [{::counter-id 1 ::counter-label \"A\"}\n   {::counter-id 2 ::counter-label \"B\"}\n   {::counter-id 3 ::counter-label \"C\"}\n   {::counter-id 4 ::counter-label \"D\"}])\n\n(pc/defresolver counter-resolver [env _]\n  {::pc/output [{::all-counters [::counter-id ::counter-label]}]}\n  {::all-counters all-counters})\n\n(def resolvers [counter-resolver])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; CLIENT:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(m/defmutation initialize-counters [_]\n  (action [{:keys [state]}]\n    (swap! state\n      (fn [state]\n        (reduce\n          (fn [state ref]\n            (update-in state ref #(merge {:ui/count 5} %)))\n          state\n          (get state ::all-counters))))))\n\n(defsc Countdown [this {::keys   [counter-label]\n                        :ui/keys [count]}]\n  {:ident [::counter-id ::counter-id]\n   :query [::counter-id ::counter-label :ui/count]}\n  (dom/div\n    (dom/h4 counter-label)\n    (let [done? (zero? count)]\n      (dom/button {:disabled done?\n                   :onClick  #(m/set-value! this :ui/count (dec count))}\n        (if done? \"Done!\" (str count))))))\n\n(def ui-countdown (comp/factory Countdown {:keyfn ::counter-id}))\n\n(defsc Root [this {::keys [all-counters]}]\n  {:initial-state (fn [_] {})\n   :query         [{::all-counters (comp/get-query Countdown)}]}\n  (dom/div\n    (dom/h3 \"Counters\")\n    (if (seq all-counters)\n      (dom/div {:style {:display \"flex\" :alignItems \"center\" :justifyContent \"space-between\"}}\n        (mapv ui-countdown all-counters))\n      (dom/button {:onClick #(df/load! this ::all-counters Countdown\n                               {:post-mutation `initialize-counters})}\n        \"Load many counters\"))))\n"]}