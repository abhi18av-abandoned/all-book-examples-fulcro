{"version":3,"sources":["book/server/ui_blocking_example.cljs"],"mappings":"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","names":["com.wsscode.pathom.connect/mutation","book.server.ui-blocking-example/submit-form-mutation","env","params","taoensso.timbre._log_BANG_.cljs$core$IFn$_invoke$arity$10","taoensso.timbre/*config*","cljs.core/Delay","cljs.core.rand.cljs$core$IFn$_invoke$arity$0","options__72617__auto__","com.fulcrologic.fulcro.components/make-state-map","com.fulcrologic.fulcro.components/wrapped-render","map__88801","com.fulcrologic.fulcro.components/props","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","js/book","js/book.server","js/book.server.ui-blocking-example","js/book.server.ui-blocking-example.BlockingOverlay","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj88804","G__88809","G__88810","goog.object/get","obj88812","com.fulcrologic.fulcro.components/configure-component!","book.server.ui-blocking-example/BlockingOverlay","this","active?","message","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.dom/macro-create-element*","book.server.ui-blocking-example/ui-overlay","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$1","book.server.ui-blocking-example/set-overlay-visible*","state","tf","cljs.core/assoc-in","book.server.ui-blocking-example/set-overlay-message*","book.server.ui-blocking-example/submit-form","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","p__88813","map__88814","p__88816","map__88817","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","s","app","result","map__88819","mutation-result","ok?","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3","js/setTimeout","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","_","map__88851","js/book.server.ui-blocking-example.Root","obj88880","G__88881","G__88882","obj88884","book.server.ui-blocking-example/Root","name","overlay","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","G__88874"],"sourcesContent":["(ns book.server.ui-blocking-example\n  (:require\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.mutations :as m :refer [defmutation]]\n    [com.wsscode.pathom.connect :as pc]\n    [taoensso.timbre :as log]))\n\n;; SERVER\n\n(pc/defmutation submit-form-mutation [env params]\n  {::pc/sym `submit-form}\n  (log/info \"Server got \" params)\n  (if (> 0.5 (rand))\n    {:message \"Everything went swell!\"\n     :ok?     true}\n    {:message \"Service temporarily unavailable!\"\n     :ok?     false}))\n\n;; CLIENT\n\n(defsc BlockingOverlay [this {:keys [ui/active? ui/message]}]\n  {:query         [:ui/active? :ui/message]\n   :initial-state {:ui/active? false :ui/message \"Please wait...\"}}\n  (dom/div {:style {:position        :absolute\n                    :display         (if active? \"block\" \"none\")\n                    :zIndex          65000\n                    :width           \"400px\"\n                    :height          \"100px\"\n                    :backgroundColor \"rgba(0,0,0,0.5)\"}}\n    (dom/div {:style {:position  :relative\n                      :top       \"40px\"\n                      :color     \"white\"\n                      :textAlign \"center\"}} message)))\n\n(def ui-overlay (comp/factory BlockingOverlay))\n\n(defn set-overlay-visible* [state tf] (assoc-in state [:overlay :ui/active?] tf))\n(defn set-overlay-message* [state message] (assoc-in state [:overlay :ui/message] message))\n\n(defmutation submit-form [params]\n  (action [{:keys [state]}]\n    (swap! state (fn [s]\n                   (-> s\n                     (set-overlay-message* \"Working...\")\n                     (set-overlay-visible* true)))))\n  (result-action [{:keys [app state result]}]\n    (log/info \"Result:\" result)\n    (let [mutation-result (-> result :body (get `submit-form))\n          {:keys [message ok?]} mutation-result]\n      (if ok?\n        (swap! state set-overlay-visible* false)\n        (do\n          (swap! state set-overlay-message* (str message \"   Retrying submission in 1s.\"))\n          ;; could use setTimeout or immediately do it\n          (js/setTimeout\n            #(comp/transact! app [(submit-form params)])\n            1000)))))\n  (remote [_] true))\n\n(defsc Root [this {:keys [ui/name overlay]}]\n  {:query         [:ui/name {:overlay (comp/get-query BlockingOverlay)}]\n   :initial-state {:overlay {} :ui/name \"Alicia\"}}\n  (dom/div {:style {:width \"400px\" :height \"100px\"}}\n    (ui-overlay overlay)\n    (dom/p \"Name: \" (dom/input {:value name}))\n    (dom/button {:onClick #(comp/transact! this [(submit-form {:made-up-data 42})])}\n      \"Submit\")))\n\n"]}