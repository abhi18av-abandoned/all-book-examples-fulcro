{"version":3,"sources":["book/demos/pre_merge/post_mutation_countdown.cljs"],"mappings":"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","names":["book.demos.pre-merge.post-mutation-countdown/all-counters","com.wsscode.pathom.connect/resolver","p__89525","map__89527","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","book.demos.pre-merge.post-mutation-countdown/counter-resolver","env","counter-id","map__89530","id","cljs.core/first","p1__89523#","cljs.core.filter.cljs$core$IFn$_invoke$arity$2","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","book.demos.pre-merge.post-mutation-countdown/resolvers","book.demos.pre-merge.post-mutation-countdown/initialize-counter","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__89537","p__89541","map__89542","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","state","p1__89532#","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/update-in","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__89568","com.fulcrologic.fulcro.components/props","js/book","js/book.demos","js/book.demos.pre-merge","js/book.demos.pre-merge.post-mutation-countdown","js/book.demos.pre-merge.post-mutation-countdown.Countdown","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj89571","G__89572","G__89573","goog.object/get","obj89575","com.fulcrologic.fulcro.components/configure-component!","book.demos.pre-merge.post-mutation-countdown/Countdown","counter-label","count","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","done?","com.fulcrologic.fulcro.mutations/set-value!","book.demos.pre-merge.post-mutation-countdown/ui-countdown","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","map__89577","js/book.demos.pre-merge.post-mutation-countdown.Root","obj89580","G__89581","G__89582","obj89584","book.demos.pre-merge.post-mutation-countdown/Root","counter","_","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core/seq","com.fulcrologic.fulcro.data_fetch.load_BANG_.cljs$core$IFn$_invoke$arity$4","book.demos.pre-merge.post-mutation-countdown/initialize","app"],"sourcesContent":["(ns book.demos.pre-merge.post-mutation-countdown\n  (:require\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [book.demos.util :refer [now]]\n    [com.fulcrologic.fulcro.mutations :as m]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [com.fulcrologic.fulcro.data-fetch :as df]\n    [com.wsscode.pathom.connect :as pc]))\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; SERVER:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(def all-counters\n  [{::counter-id 1 ::counter-label \"A\"}])\n\n(pc/defresolver counter-resolver [env {::keys [counter-id]}]\n  {::pc/input  #{::counter-id}\n   ::pc/output [::counter-id ::counter-label]}\n  (let [{:keys [id]} (-> env :ast :params)]\n    (first (filter #(= id (::counter-id %)) all-counters))))\n\n(def resolvers [counter-resolver])\n\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n;; CLIENT:\n;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n\n(m/defmutation initialize-counter [{::keys [counter-id]}]\n  (action [{:keys [state]}]\n    (swap! state update-in [::counter-id counter-id] #(merge {:ui/count 5} %))))\n\n(defsc Countdown [this {::keys   [counter-label]\n                        :ui/keys [count]}]\n  {:ident [::counter-id ::counter-id]\n   :query [::counter-id ::counter-label :ui/count]}\n  (dom/div\n    (dom/h4 counter-label)\n    (let [done? (zero? count)]\n      (dom/button {:disabled done?\n                   :onClick  #(m/set-value! this :ui/count (dec count))}\n        (if done? \"Done!\" (str count))))))\n\n(def ui-countdown (comp/factory Countdown {:keyfn ::counter-id}))\n\n(defsc Root [this {:keys [counter]}]\n  {:initial-state (fn [_] {})\n   :query         [{:counter (comp/get-query Countdown)}]}\n  (dom/div\n    (dom/h3 \"Counters\")\n    (if (seq counter)\n      (ui-countdown counter)\n      (dom/button {:onClick #(df/load! this [::counter-id 1] Countdown\n                               {:target               [:counter]\n                                :post-mutation        `initialize-counter\n                                :post-mutation-params {::counter-id 1}})}\n        \"Load one counter\"))))\n\n(defn initialize\n  \"To be used in :started-callback to pre-load things.\"\n  [app])\n"]}