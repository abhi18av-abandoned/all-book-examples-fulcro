shadow$provide.module$node_modules$react_stripe_elements$lib$components$Provider=function(global,require,module,exports){function _inherits(subClass,superClass){if("function"!==typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,
superClass):subClass.__proto__=superClass)}Object.defineProperty(exports,"__esModule",{value:!0});exports.providerContextTypes=void 0;var _react2=(global=require("module$node_modules$react$index"))&&global.__esModule?global:{default:global};require=(require=require("module$node_modules$prop_types$index"))&&require.__esModule?require:{default:require};global=exports.providerContextTypes={tag:require.default.string.isRequired,stripe:require.default.object,addStripeLoadListener:require.default.func};
var ensureStripeShape=function(stripe){if(stripe&&stripe.elements&&stripe.createSource&&stripe.createToken&&stripe.createPaymentMethod&&stripe.handleCardPayment)return stripe;throw Error("Please pass a valid Stripe object to StripeProvider. You can obtain a Stripe object by calling 'Stripe(...)' with your publishable key.");};module=function(_React$Component){function Provider(props){if(!(this instanceof Provider))throw new TypeError("Cannot call a class as a function");props=_React$Component.call(this,
props);if(!this)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");props=!props||"object"!==typeof props&&"function"!==typeof props?this:props;if(props.props.apiKey&&props.props.stripe)throw Error("Please pass either 'apiKey' or 'stripe' to StripeProvider, not both.");if(props.props.apiKey)if(window.Stripe){var _this$props=props.props,_apiKey=_this$props.apiKey,keys=["apiKey","children","stripe"],target={};for(i in _this$props)0<=keys.indexOf(i)||Object.prototype.hasOwnProperty.call(_this$props,
i)&&(target[i]=_this$props[i]);window.Stripe.__cachedInstances=window.Stripe.__cachedInstances||{};var i="key\x3d"+_apiKey+" options\x3d"+JSON.stringify(target);_apiKey=window.Stripe.__cachedInstances[i]||window.Stripe(_apiKey,target);window.Stripe.__cachedInstances[i]=_apiKey;props._meta={tag:"sync",stripe:_apiKey}}else throw Error("Please load Stripe.js (https://js.stripe.com/v3/) on this page to use react-stripe-elements. If Stripe.js isn't available yet (it's loading asynchronously, or you're using server-side rendering), see https://github.com/stripe/react-stripe-elements#advanced-integrations");
else if(props.props.stripe)props._meta={tag:"sync",stripe:ensureStripeShape(props.props.stripe)};else if(null===props.props.stripe)props._meta={tag:"async",stripe:null};else throw Error("Please pass either 'apiKey' or 'stripe' to StripeProvider. If you're using 'stripe' but don't have a Stripe instance yet, pass 'null' explicitly.");props._didWarn=!1;props._didWakeUpListeners=!1;props._listeners=[];return props}_inherits(Provider,_React$Component);Provider.prototype.getChildContext=function(){var _this2=
this;return"sync"===this._meta.tag?{tag:"sync",stripe:this._meta.stripe}:{tag:"async",addStripeLoadListener:function(fn){_this2._meta.stripe?fn(_this2._meta.stripe):_this2._listeners.push(fn)}}};Provider.prototype.componentWillReceiveProps=function(nextProps){var apiKeyChanged=this.props.apiKey&&nextProps.apiKey&&this.props.apiKey!==nextProps.apiKey,stripeInstanceChanged=this.props.stripe&&nextProps.stripe&&this.props.stripe!==nextProps.stripe;if(!this._didWarn&&(apiKeyChanged||stripeInstanceChanged)&&
window.console&&window.console.error)this._didWarn=!0,console.error("StripeProvider does not support changing the apiKey parameter.");else if(!this._didWakeUpListeners&&nextProps.stripe){this._didWakeUpListeners=!0;var _stripe2=ensureStripeShape(nextProps.stripe);this._meta.stripe=_stripe2;this._listeners.forEach(function(fn){fn(_stripe2)})}};Provider.prototype.render=function(){return _react2.default.Children.only(this.props.children)};return Provider}(_react2.default.Component);module.propTypes=
{apiKey:require.default.string,stripe:require.default.object,children:require.default.node};module.childContextTypes=global;module.defaultProps={apiKey:void 0,stripe:void 0,children:null};exports.default=module}
//# sourceMappingURL=module$node_modules$react_stripe_elements$lib$components$Provider.js.map
