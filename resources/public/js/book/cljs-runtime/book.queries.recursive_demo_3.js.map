{"version":3,"sources":["book/queries/recursive_demo_3.cljs"],"mappings":"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","names":["book.queries.recursive-demo-3/make-older","com.fulcrologic.fulcro.mutations/->Mutation","com.fulcrologic.fulcro.mutations/mutate","fulcro-mutation-env-symbol","map__85834","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","p__85838","map__85839","env","temp__5735__auto__","com.fulcrologic.fulcro.algorithms.lookup/app-algorithm","default-action","id","state","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4","cljs.core/update-in","cljs.core/inc","options__72617__auto__","this","props","com.fulcrologic.fulcro.components/wrapped-render","map__85848","com.fulcrologic.fulcro.components/props","map__85849","com.fulcrologic.fulcro.components.get_computed.cljs$core$IFn$_invoke$arity$1","cljs.core.get.cljs$core$IFn$_invoke$arity$3","js/book","js/book.queries","js/book.queries.recursive-demo-3","js/book.queries.recursive-demo-3.Person","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj85867","G__85868","G__85869","goog.object/get","obj85873","com.fulcrologic.fulcro.components/configure-component!","book.queries.recursive-demo-3/Person","name","spouse","age","render-depth","p","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","com.fulcrologic.fulcro.components/force-children","com.fulcrologic.fulcro.dom/macro-create-element*","cljs.core/vec","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$1","cljs.core/List","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/array-map","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","and__4120__auto__","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","G__85859","book.queries.recursive-demo-3/ui-person","com.fulcrologic.fulcro.components/computed","com.fulcrologic.fulcro.components.factory.cljs$core$IFn$_invoke$arity$2","params","com.fulcrologic.fulcro.components/make-state-map","map__85880","js/book.queries.recursive-demo-3.Root","obj85892","G__85893","G__85894","obj85896","book.queries.recursive-demo-3/Root","person-of-interest","com.fulcrologic.fulcro.components.get_query.cljs$core$IFn$_invoke$arity$1"],"sourcesContent":["(ns book.queries.recursive-demo-3\n  (:require [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n            [com.fulcrologic.fulcro.mutations :refer [defmutation]]\n            [com.fulcrologic.fulcro.dom :as dom]))\n\n(declare ui-person)\n\n(defmutation make-older [{:keys [id]}]\n  (action [{:keys [state]}]\n    (swap! state update-in [:person/id id :person/age] inc)))\n\n; We use computed to track the depth. Targeted refreshes will retain the computed they got on\n; the most recent render. This allows us to detect how deep we are.\n(defsc Person [this\n               {:keys [db/id person/name person/spouse person/age]} ; props\n               {:keys [render-depth] :or {render-depth 0}}] ; computed\n  {:query         (fn [] [:db/id :person/name :person/age {:person/spouse 1}]) ; force limit the depth\n   :initial-state (fn [p]\n                    {:db/id         1 :person/name \"Joe\" :person/age 20\n                     :person/spouse {:db/id         2 :person/name \"Sally\"\n                                     :person/age    22\n                                     :person/spouse {:db/id 1 :person/name \"Joe\"}}})\n   :ident         [:person/id :db/id]}\n  (dom/div\n    (dom/div \"Name:\" name)\n    (dom/div \"Age:\" age\n      (dom/button {:onClick\n                   #(comp/transact! this `[(make-older {:id ~id})])} \"Make Older\"))\n    (when (and (= 0 render-depth) spouse)\n      (dom/ul\n        (dom/div \"Spouse:\"\n          ; recursively render, but increase the render depth so we can know when a\n          ; targeted UI refresh would accidentally push the UI deeper.\n          (ui-person (comp/computed spouse {:render-depth (inc render-depth)})))))))\n\n(def ui-person (comp/factory Person {:keyfn :db/id}))\n\n(defsc Root [this {:keys [person-of-interest]}]\n  {:initial-state {:person-of-interest {}}\n   :query         [{:person-of-interest (comp/get-query Person)}]}\n  (dom/div\n    (ui-person person-of-interest)))\n"]}