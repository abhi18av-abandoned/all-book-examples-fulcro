{"version":3,"sources":["book/demos/dynamic_ui_routing.cljs"],"mappings":"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","names":["options__72617__auto__","p__89054","map__89055","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.components/wrapped-render","map__89057","com.fulcrologic.fulcro.components/props","js/book","js/book.demos","js/book.demos.dynamic-ui-routing","js/book.demos.dynamic-ui-routing.Login","props__72618__auto__","this__72619__auto__","temp__5733__auto__","init-state__72620__auto__","obj89060","G__89061","G__89062","goog.object/get","obj89064","com.fulcrologic.fulcro.components/configure-component!","book.demos.dynamic-ui-routing/Login","this","label","login-prop","params","com.fulcrologic.fulcro.routing.legacy-ui-routers/dynamic-route-key","com.fulcrologic.fulcro.dom/macro-create-element*","com.fulcrologic.fulcro.components/force-children","p__89065","map__89066","map__89068","js/book.demos.dynamic-ui-routing.NewUser","obj89071","G__89072","G__89073","obj89075","book.demos.dynamic-ui-routing/NewUser","new-user-prop","map__89108","pending-route","js/book.demos.dynamic-ui-routing.Root","obj89111","G__89112","G__89113","obj89115","book.demos.dynamic-ui-routing/Root","top-router","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.routing.legacy_ui_routers.routing_tree.cljs$core$IFn$_invoke$arity$variadic","com.fulcrologic.fulcro.routing.legacy-ui-routers/make-route","com.fulcrologic.fulcro.routing.legacy-ui-routers/router-instruction","com.fulcrologic.fulcro.components.get_initial_state.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.routing.legacy-ui-routers/DynamicRouter","com.fulcrologic.fulcro.routing.legacy-ui-routers/get-dynamic-router-query","com.fulcrologic.fulcro.routing.legacy-ui-routers/routing-tree-key","com.fulcrologic.fulcro.dom.macro_create_element.cljs$core$IFn$_invoke$arity$3","cljs.core/vec","cljs.core.sequence.cljs$core$IFn$_invoke$arity$1","cljs.core/seq","cljs.core.concat.cljs$core$IFn$_invoke$arity$1","cljs.core/List","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/array-map","com.fulcrologic.fulcro.components.transact_BANG_.cljs$core$IFn$_invoke$arity$2","com.fulcrologic.fulcro.routing.legacy-ui-routers/ui-dynamic-router","book.demos.dynamic-ui-routing/application-loaded","app","cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic"],"sourcesContent":["(ns book.demos.dynamic-ui-routing\n  (:require\n    [com.fulcrologic.fulcro.routing.legacy-ui-routers :as r]\n    [com.fulcrologic.fulcro.dom :as dom]\n    [com.fulcrologic.fulcro.components :as comp :refer [defsc]]\n    [cljs.loader :as loader]\n    [taoensso.timbre :as log]))\n\n(defsc Login [this {:keys [label login-prop]}]\n  {:initial-state (fn [params] {r/dynamic-route-key :login :label \"LOGIN\" :login-prop \"login data\"})\n   :ident         (fn [] [:login :singleton])\n   :query         [r/dynamic-route-key :label :login-prop]}\n  (dom/div {:style {:backgroundColor \"green\"}}\n    (str label \" \" login-prop)))\n\n(defsc NewUser [this {:keys [label new-user-prop]}]\n  {:initial-state (fn [params] {r/dynamic-route-key :new-user :label \"New User\" :new-user-prop \"new user data\"})\n   :ident         (fn [] [:new-user :singleton])\n   :query         [r/dynamic-route-key :label :new-user-prop]}\n  (dom/div {:style {:backgroundColor \"skyblue\"}}\n    (str label \" \" new-user-prop)))\n\n(defsc Root [this {:keys [top-router :com.fulcrologic.fulcro.routing.legacy-ui-routers/pending-route]}]\n  {:initial-state (fn [params] (merge\n                                 (r/routing-tree\n                                   (r/make-route :ui-main [(r/router-instruction :top-router [:ui-main :singleton])])\n                                   (r/make-route :login [(r/router-instruction :top-router [:login :singleton])])\n                                   (r/make-route :new-user [(r/router-instruction :top-router [:new-user :singleton])]))\n                                 {:top-router (comp/get-initial-state r/DynamicRouter {:id :top-router})}))\n   :query         [:ui/react-key {:top-router (r/get-dynamic-router-query :top-router)}\n                   :com.fulcrologic.fulcro.routing.legacy-ui-routers/pending-route\n                   r/routing-tree-key]}\n  (dom/div nil\n    ; Sample nav mutations\n    (dom/a {:onClick #(comp/transact! this `[(r/route-to {:handler :ui-main})])} \"Main\") \" | \"\n    (dom/a {:onClick #(comp/transact! this `[(r/route-to {:handler :new-user})])} \"New User\") \" | \"\n    (dom/a {:onClick #(comp/transact! this `[(r/route-to {:handler :login})])} \"Login\") \" | \"\n    (dom/div (if pending-route \"Loading\" \"Done\"))\n    (r/ui-dynamic-router top-router)))\n\n; Use this as started-callback. These would happen as a result of module loads:\n(defn application-loaded [app]\n  ; Let the dynamic router know that two of the routes are already loaded.\n  (comp/transact! app `[(r/install-route {:target-kw :new-user :component ~NewUser})\n                        (r/install-route {:target-kw :login :component ~Login})\n                        (r/route-to {:handler :login})]))\n\n"]}